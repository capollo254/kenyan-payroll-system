{"ast":null,"code":"// api/compliance.js\n// The base URL for your Django backend\nconst API_BASE_URL='http://127.0.0.1:8000/api/v1';// Get token from localStorage\nconst getToken=()=>localStorage.getItem('token');// Statutory Rates API\nexport const getStatutoryRates=async()=>{try{const token=getToken();const response=await fetch(\"\".concat(API_BASE_URL,\"/compliance/statutory-rates/current_rates/\"),{headers:{'Authorization':\"Token \".concat(token),'Content-Type':'application/json'}});if(!response.ok){throw new Error(\"HTTP error! status: \".concat(response.status));}return await response.json();}catch(error){console.error('Error fetching statutory rates:',error);throw error;}};export const updateStatutoryRates=async ratesData=>{try{const token=getToken();const response=await fetch(\"\".concat(API_BASE_URL,\"/compliance/statutory-rates/bulk_update/\"),{method:'POST',headers:{'Authorization':\"Token \".concat(token),'Content-Type':'application/json'},body:JSON.stringify(ratesData)});if(!response.ok){const errorData=await response.json();throw new Error(errorData.error||\"HTTP error! status: \".concat(response.status));}return await response.json();}catch(error){console.error('Error updating statutory rates:',error);throw error;}};export const getStatutoryRatesList=async()=>{try{const token=getToken();const response=await fetch(\"\".concat(API_BASE_URL,\"/compliance/statutory-rates/\"),{headers:{'Authorization':\"Token \".concat(token),'Content-Type':'application/json'}});if(!response.ok){throw new Error(\"HTTP error! status: \".concat(response.status));}return await response.json();}catch(error){console.error('Error fetching statutory rates list:',error);throw error;}};","map":{"version":3,"names":["API_BASE_URL","getToken","localStorage","getItem","getStatutoryRates","token","response","fetch","concat","headers","ok","Error","status","json","error","console","updateStatutoryRates","ratesData","method","body","JSON","stringify","errorData","getStatutoryRatesList"],"sources":["C:/Users/Code_AI/Documents/Bloom HR and Payroll/kenyan-payroll-system/frontend/src/api/compliance.js"],"sourcesContent":["// api/compliance.js\r\n\r\n// The base URL for your Django backend\r\nconst API_BASE_URL = 'http://127.0.0.1:8000/api/v1';\r\n\r\n// Get token from localStorage\r\nconst getToken = () => localStorage.getItem('token');\r\n\r\n// Statutory Rates API\r\nexport const getStatutoryRates = async () => {\r\n  try {\r\n    const token = getToken();\r\n    const response = await fetch(`${API_BASE_URL}/compliance/statutory-rates/current_rates/`, {\r\n      headers: {\r\n        'Authorization': `Token ${token}`,\r\n        'Content-Type': 'application/json',\r\n      },\r\n    });\r\n\r\n    if (!response.ok) {\r\n      throw new Error(`HTTP error! status: ${response.status}`);\r\n    }\r\n\r\n    return await response.json();\r\n  } catch (error) {\r\n    console.error('Error fetching statutory rates:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const updateStatutoryRates = async (ratesData) => {\r\n  try {\r\n    const token = getToken();\r\n    const response = await fetch(`${API_BASE_URL}/compliance/statutory-rates/bulk_update/`, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Authorization': `Token ${token}`,\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify(ratesData),\r\n    });\r\n\r\n    if (!response.ok) {\r\n      const errorData = await response.json();\r\n      throw new Error(errorData.error || `HTTP error! status: ${response.status}`);\r\n    }\r\n\r\n    return await response.json();\r\n  } catch (error) {\r\n    console.error('Error updating statutory rates:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const getStatutoryRatesList = async () => {\r\n  try {\r\n    const token = getToken();\r\n    const response = await fetch(`${API_BASE_URL}/compliance/statutory-rates/`, {\r\n      headers: {\r\n        'Authorization': `Token ${token}`,\r\n        'Content-Type': 'application/json',\r\n      },\r\n    });\r\n\r\n    if (!response.ok) {\r\n      throw new Error(`HTTP error! status: ${response.status}`);\r\n    }\r\n\r\n    return await response.json();\r\n  } catch (error) {\r\n    console.error('Error fetching statutory rates list:', error);\r\n    throw error;\r\n  }\r\n};"],"mappings":"AAAA;AAEA;AACA,KAAM,CAAAA,YAAY,CAAG,8BAA8B,CAEnD;AACA,KAAM,CAAAC,QAAQ,CAAGA,CAAA,GAAMC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CAEpD;AACA,MAAO,MAAM,CAAAC,iBAAiB,CAAG,KAAAA,CAAA,GAAY,CAC3C,GAAI,CACF,KAAM,CAAAC,KAAK,CAAGJ,QAAQ,CAAC,CAAC,CACxB,KAAM,CAAAK,QAAQ,CAAG,KAAM,CAAAC,KAAK,IAAAC,MAAA,CAAIR,YAAY,+CAA8C,CACxFS,OAAO,CAAE,CACP,eAAe,UAAAD,MAAA,CAAWH,KAAK,CAAE,CACjC,cAAc,CAAE,kBAClB,CACF,CAAC,CAAC,CAEF,GAAI,CAACC,QAAQ,CAACI,EAAE,CAAE,CAChB,KAAM,IAAI,CAAAC,KAAK,wBAAAH,MAAA,CAAwBF,QAAQ,CAACM,MAAM,CAAE,CAAC,CAC3D,CAEA,MAAO,MAAM,CAAAN,QAAQ,CAACO,IAAI,CAAC,CAAC,CAC9B,CAAE,MAAOC,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,iCAAiC,CAAEA,KAAK,CAAC,CACvD,KAAM,CAAAA,KAAK,CACb,CACF,CAAC,CAED,MAAO,MAAM,CAAAE,oBAAoB,CAAG,KAAO,CAAAC,SAAS,EAAK,CACvD,GAAI,CACF,KAAM,CAAAZ,KAAK,CAAGJ,QAAQ,CAAC,CAAC,CACxB,KAAM,CAAAK,QAAQ,CAAG,KAAM,CAAAC,KAAK,IAAAC,MAAA,CAAIR,YAAY,6CAA4C,CACtFkB,MAAM,CAAE,MAAM,CACdT,OAAO,CAAE,CACP,eAAe,UAAAD,MAAA,CAAWH,KAAK,CAAE,CACjC,cAAc,CAAE,kBAClB,CAAC,CACDc,IAAI,CAAEC,IAAI,CAACC,SAAS,CAACJ,SAAS,CAChC,CAAC,CAAC,CAEF,GAAI,CAACX,QAAQ,CAACI,EAAE,CAAE,CAChB,KAAM,CAAAY,SAAS,CAAG,KAAM,CAAAhB,QAAQ,CAACO,IAAI,CAAC,CAAC,CACvC,KAAM,IAAI,CAAAF,KAAK,CAACW,SAAS,CAACR,KAAK,yBAAAN,MAAA,CAA2BF,QAAQ,CAACM,MAAM,CAAE,CAAC,CAC9E,CAEA,MAAO,MAAM,CAAAN,QAAQ,CAACO,IAAI,CAAC,CAAC,CAC9B,CAAE,MAAOC,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,iCAAiC,CAAEA,KAAK,CAAC,CACvD,KAAM,CAAAA,KAAK,CACb,CACF,CAAC,CAED,MAAO,MAAM,CAAAS,qBAAqB,CAAG,KAAAA,CAAA,GAAY,CAC/C,GAAI,CACF,KAAM,CAAAlB,KAAK,CAAGJ,QAAQ,CAAC,CAAC,CACxB,KAAM,CAAAK,QAAQ,CAAG,KAAM,CAAAC,KAAK,IAAAC,MAAA,CAAIR,YAAY,iCAAgC,CAC1ES,OAAO,CAAE,CACP,eAAe,UAAAD,MAAA,CAAWH,KAAK,CAAE,CACjC,cAAc,CAAE,kBAClB,CACF,CAAC,CAAC,CAEF,GAAI,CAACC,QAAQ,CAACI,EAAE,CAAE,CAChB,KAAM,IAAI,CAAAC,KAAK,wBAAAH,MAAA,CAAwBF,QAAQ,CAACM,MAAM,CAAE,CAAC,CAC3D,CAEA,MAAO,MAAM,CAAAN,QAAQ,CAACO,IAAI,CAAC,CAAC,CAC9B,CAAE,MAAOC,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,sCAAsC,CAAEA,KAAK,CAAC,CAC5D,KAAM,CAAAA,KAAK,CACb,CACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
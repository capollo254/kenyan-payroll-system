{"ast":null,"code":"// src/components/forms/CreatePayrollRunForm.js\nimport React,{useState}from'react';import InputField from'../common/InputField';import Button from'../common/Button';import{createPayrollRun}from'../../api/payroll';/**\r\n * A form component to create a new payroll run.\r\n * @param {object} props - Component props.\r\n * @param {function} props.onRunCreated - Callback function to run on successful payroll run creation.\r\n */import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const CreatePayrollRunForm=_ref=>{let{onRunCreated}=_ref;const[runDate,setRunDate]=useState('');const[periodStartDate,setPeriodStartDate]=useState('');const[periodEndDate,setPeriodEndDate]=useState('');const[loading,setLoading]=useState(false);const[error,setError]=useState(null);const[success,setSuccess]=useState(null);const handleSubmit=async e=>{e.preventDefault();setLoading(true);setError(null);setSuccess(null);try{const data={run_date:runDate,period_start_date:periodStartDate,period_end_date:periodEndDate};await createPayrollRun(data);setSuccess('Payroll run created successfully! Payslips are being generated.');onRunCreated();}catch(err){console.error('Error creating payroll run:',err);setError('Failed to create payroll run. Please check the dates.');}finally{setLoading(false);}};return/*#__PURE__*/_jsxs(\"div\",{className:\"card\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Run New Payroll\"}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit,children:[/*#__PURE__*/_jsx(InputField,{label:\"Run Date\",type:\"date\",value:runDate,onChange:e=>setRunDate(e.target.value),required:true}),/*#__PURE__*/_jsx(InputField,{label:\"Payroll Period Start Date\",type:\"date\",value:periodStartDate,onChange:e=>setPeriodStartDate(e.target.value),required:true}),/*#__PURE__*/_jsx(InputField,{label:\"Payroll Period End Date\",type:\"date\",value:periodEndDate,onChange:e=>setPeriodEndDate(e.target.value),required:true}),error&&/*#__PURE__*/_jsx(\"p\",{className:\"error\",children:error}),success&&/*#__PURE__*/_jsx(\"p\",{className:\"message success\",children:success}),/*#__PURE__*/_jsx(Button,{type:\"submit\",className:\"btn-success\",disabled:loading,children:loading?'Running...':'Create Payroll Run'})]})]});};export default CreatePayrollRunForm;","map":{"version":3,"names":["React","useState","InputField","Button","createPayrollRun","jsx","_jsx","jsxs","_jsxs","CreatePayrollRunForm","_ref","onRunCreated","runDate","setRunDate","periodStartDate","setPeriodStartDate","periodEndDate","setPeriodEndDate","loading","setLoading","error","setError","success","setSuccess","handleSubmit","e","preventDefault","data","run_date","period_start_date","period_end_date","err","console","className","children","onSubmit","label","type","value","onChange","target","required","disabled"],"sources":["C:/Users/Code_AI/Documents/Bloom HR and Payroll/kenyan-payroll-system/frontend/src/components/forms/CreatePayrollRunForm.js"],"sourcesContent":["// src/components/forms/CreatePayrollRunForm.js\r\n\r\nimport React, { useState } from 'react';\r\nimport InputField from '../common/InputField';\r\nimport Button from '../common/Button';\r\nimport { createPayrollRun } from '../../api/payroll';\r\n\r\n/**\r\n * A form component to create a new payroll run.\r\n * @param {object} props - Component props.\r\n * @param {function} props.onRunCreated - Callback function to run on successful payroll run creation.\r\n */\r\nconst CreatePayrollRunForm = ({ onRunCreated }) => {\r\n  const [runDate, setRunDate] = useState('');\r\n  const [periodStartDate, setPeriodStartDate] = useState('');\r\n  const [periodEndDate, setPeriodEndDate] = useState('');\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n  const [success, setSuccess] = useState(null);\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n    setError(null);\r\n    setSuccess(null);\r\n    try {\r\n      const data = {\r\n        run_date: runDate,\r\n        period_start_date: periodStartDate,\r\n        period_end_date: periodEndDate,\r\n      };\r\n      await createPayrollRun(data);\r\n      setSuccess('Payroll run created successfully! Payslips are being generated.');\r\n      onRunCreated();\r\n    } catch (err) {\r\n      console.error('Error creating payroll run:', err);\r\n      setError('Failed to create payroll run. Please check the dates.');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"card\">\r\n      <h2>Run New Payroll</h2>\r\n      <form onSubmit={handleSubmit}>\r\n        <InputField\r\n          label=\"Run Date\"\r\n          type=\"date\"\r\n          value={runDate}\r\n          onChange={(e) => setRunDate(e.target.value)}\r\n          required\r\n        />\r\n        <InputField\r\n          label=\"Payroll Period Start Date\"\r\n          type=\"date\"\r\n          value={periodStartDate}\r\n          onChange={(e) => setPeriodStartDate(e.target.value)}\r\n          required\r\n        />\r\n        <InputField\r\n          label=\"Payroll Period End Date\"\r\n          type=\"date\"\r\n          value={periodEndDate}\r\n          onChange={(e) => setPeriodEndDate(e.target.value)}\r\n          required\r\n        />\r\n        {error && <p className=\"error\">{error}</p>}\r\n        {success && <p className=\"message success\">{success}</p>}\r\n        <Button type=\"submit\" className=\"btn-success\" disabled={loading}>\r\n          {loading ? 'Running...' : 'Create Payroll Run'}\r\n        </Button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CreatePayrollRunForm;"],"mappings":"AAAA;AAEA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,KAAQ,OAAO,CACvC,MAAO,CAAAC,UAAU,KAAM,sBAAsB,CAC7C,MAAO,CAAAC,MAAM,KAAM,kBAAkB,CACrC,OAASC,gBAAgB,KAAQ,mBAAmB,CAEpD;AACA;AACA;AACA;AACA,GAJA,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAKA,KAAM,CAAAC,oBAAoB,CAAGC,IAAA,EAAsB,IAArB,CAAEC,YAAa,CAAC,CAAAD,IAAA,CAC5C,KAAM,CAACE,OAAO,CAAEC,UAAU,CAAC,CAAGZ,QAAQ,CAAC,EAAE,CAAC,CAC1C,KAAM,CAACa,eAAe,CAAEC,kBAAkB,CAAC,CAAGd,QAAQ,CAAC,EAAE,CAAC,CAC1D,KAAM,CAACe,aAAa,CAAEC,gBAAgB,CAAC,CAAGhB,QAAQ,CAAC,EAAE,CAAC,CACtD,KAAM,CAACiB,OAAO,CAAEC,UAAU,CAAC,CAAGlB,QAAQ,CAAC,KAAK,CAAC,CAC7C,KAAM,CAACmB,KAAK,CAAEC,QAAQ,CAAC,CAAGpB,QAAQ,CAAC,IAAI,CAAC,CACxC,KAAM,CAACqB,OAAO,CAAEC,UAAU,CAAC,CAAGtB,QAAQ,CAAC,IAAI,CAAC,CAE5C,KAAM,CAAAuB,YAAY,CAAG,KAAO,CAAAC,CAAC,EAAK,CAChCA,CAAC,CAACC,cAAc,CAAC,CAAC,CAClBP,UAAU,CAAC,IAAI,CAAC,CAChBE,QAAQ,CAAC,IAAI,CAAC,CACdE,UAAU,CAAC,IAAI,CAAC,CAChB,GAAI,CACF,KAAM,CAAAI,IAAI,CAAG,CACXC,QAAQ,CAAEhB,OAAO,CACjBiB,iBAAiB,CAAEf,eAAe,CAClCgB,eAAe,CAAEd,aACnB,CAAC,CACD,KAAM,CAAAZ,gBAAgB,CAACuB,IAAI,CAAC,CAC5BJ,UAAU,CAAC,iEAAiE,CAAC,CAC7EZ,YAAY,CAAC,CAAC,CAChB,CAAE,MAAOoB,GAAG,CAAE,CACZC,OAAO,CAACZ,KAAK,CAAC,6BAA6B,CAAEW,GAAG,CAAC,CACjDV,QAAQ,CAAC,uDAAuD,CAAC,CACnE,CAAC,OAAS,CACRF,UAAU,CAAC,KAAK,CAAC,CACnB,CACF,CAAC,CAED,mBACEX,KAAA,QAAKyB,SAAS,CAAC,MAAM,CAAAC,QAAA,eACnB5B,IAAA,OAAA4B,QAAA,CAAI,iBAAe,CAAI,CAAC,cACxB1B,KAAA,SAAM2B,QAAQ,CAAEX,YAAa,CAAAU,QAAA,eAC3B5B,IAAA,CAACJ,UAAU,EACTkC,KAAK,CAAC,UAAU,CAChBC,IAAI,CAAC,MAAM,CACXC,KAAK,CAAE1B,OAAQ,CACf2B,QAAQ,CAAGd,CAAC,EAAKZ,UAAU,CAACY,CAAC,CAACe,MAAM,CAACF,KAAK,CAAE,CAC5CG,QAAQ,MACT,CAAC,cACFnC,IAAA,CAACJ,UAAU,EACTkC,KAAK,CAAC,2BAA2B,CACjCC,IAAI,CAAC,MAAM,CACXC,KAAK,CAAExB,eAAgB,CACvByB,QAAQ,CAAGd,CAAC,EAAKV,kBAAkB,CAACU,CAAC,CAACe,MAAM,CAACF,KAAK,CAAE,CACpDG,QAAQ,MACT,CAAC,cACFnC,IAAA,CAACJ,UAAU,EACTkC,KAAK,CAAC,yBAAyB,CAC/BC,IAAI,CAAC,MAAM,CACXC,KAAK,CAAEtB,aAAc,CACrBuB,QAAQ,CAAGd,CAAC,EAAKR,gBAAgB,CAACQ,CAAC,CAACe,MAAM,CAACF,KAAK,CAAE,CAClDG,QAAQ,MACT,CAAC,CACDrB,KAAK,eAAId,IAAA,MAAG2B,SAAS,CAAC,OAAO,CAAAC,QAAA,CAAEd,KAAK,CAAI,CAAC,CACzCE,OAAO,eAAIhB,IAAA,MAAG2B,SAAS,CAAC,iBAAiB,CAAAC,QAAA,CAAEZ,OAAO,CAAI,CAAC,cACxDhB,IAAA,CAACH,MAAM,EAACkC,IAAI,CAAC,QAAQ,CAACJ,SAAS,CAAC,aAAa,CAACS,QAAQ,CAAExB,OAAQ,CAAAgB,QAAA,CAC7DhB,OAAO,CAAG,YAAY,CAAG,oBAAoB,CACxC,CAAC,EACL,CAAC,EACJ,CAAC,CAEV,CAAC,CAED,cAAe,CAAAT,oBAAoB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
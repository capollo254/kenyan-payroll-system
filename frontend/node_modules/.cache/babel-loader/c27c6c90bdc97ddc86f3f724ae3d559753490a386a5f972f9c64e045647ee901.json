{"ast":null,"code":"// src/api/p9.js\nconst BASE_URL=process.env.REACT_APP_API_BASE_URL||'http://127.0.0.1:8000/api/v1';// Get auth headers\nconst getAuthHeaders=()=>{const token=localStorage.getItem('token');return{'Content-Type':'application/json','Authorization':token?\"Token \".concat(token):''};};// Get my P9 reports (employee-specific)\nexport const getMyP9Reports=async()=>{const response=await fetch(\"\".concat(BASE_URL,\"/reports/p9/\"),{method:'GET',headers:getAuthHeaders()});if(!response.ok){throw new Error('Failed to fetch P9 reports');}return response.json();};// Get specific P9 report\nexport const getP9Report=async id=>{const response=await fetch(\"\".concat(BASE_URL,\"/reports/p9/\").concat(id,\"/\"),{method:'GET',headers:getAuthHeaders()});if(!response.ok){throw new Error('Failed to fetch P9 report');}return response.json();};// Generate P9 for specific year\nexport const generateP9=async year=>{const response=await fetch(\"\".concat(BASE_URL,\"/reports/p9/\"),{method:'POST',headers:getAuthHeaders(),body:JSON.stringify({tax_year:year})});if(!response.ok){const errorData=await response.json();throw new Error(errorData.error||'Failed to generate P9 report');}return response.json();};// Download P9 as PDF\nexport const downloadP9PDF=async p9Id=>{const token=localStorage.getItem('token');const response=await fetch(\"\".concat(BASE_URL,\"/reports/p9/\").concat(p9Id,\"/download_pdf/\"),{method:'GET',headers:{'Authorization':token?\"Token \".concat(token):''}});if(!response.ok){throw new Error('Failed to download P9 PDF');}// Handle binary response\nconst blob=await response.blob();const url=window.URL.createObjectURL(blob);const link=document.createElement('a');link.href=url;link.download=\"P9_Report_\".concat(p9Id,\".pdf\");document.body.appendChild(link);link.click();document.body.removeChild(link);window.URL.revokeObjectURL(url);};// Get payslip summary for P9 generation\nexport const getPayslipSummary=async year=>{const response=await fetch(\"\".concat(BASE_URL,\"/reports/p9/payslip_summary/?year=\").concat(year),{method:'GET',headers:getAuthHeaders()});if(!response.ok){throw new Error('Failed to fetch payslip summary');}return response.json();};","map":{"version":3,"names":["BASE_URL","process","env","REACT_APP_API_BASE_URL","getAuthHeaders","token","localStorage","getItem","concat","getMyP9Reports","response","fetch","method","headers","ok","Error","json","getP9Report","id","generateP9","year","body","JSON","stringify","tax_year","errorData","error","downloadP9PDF","p9Id","blob","url","window","URL","createObjectURL","link","document","createElement","href","download","appendChild","click","removeChild","revokeObjectURL","getPayslipSummary"],"sources":["C:/Users/Code_AI/Documents/Bloom HR and Payroll/kenyan-payroll-system/frontend/src/api/p9.js"],"sourcesContent":["// src/api/p9.js\r\n\r\nconst BASE_URL = process.env.REACT_APP_API_BASE_URL || 'http://127.0.0.1:8000/api/v1';\r\n\r\n// Get auth headers\r\nconst getAuthHeaders = () => {\r\n  const token = localStorage.getItem('token');\r\n  return {\r\n    'Content-Type': 'application/json',\r\n    'Authorization': token ? `Token ${token}` : '',\r\n  };\r\n};\r\n\r\n// Get my P9 reports (employee-specific)\r\nexport const getMyP9Reports = async () => {\r\n  const response = await fetch(`${BASE_URL}/reports/p9/`, {\r\n    method: 'GET',\r\n    headers: getAuthHeaders(),\r\n  });\r\n\r\n  if (!response.ok) {\r\n    throw new Error('Failed to fetch P9 reports');\r\n  }\r\n\r\n  return response.json();\r\n};\r\n\r\n// Get specific P9 report\r\nexport const getP9Report = async (id) => {\r\n  const response = await fetch(`${BASE_URL}/reports/p9/${id}/`, {\r\n    method: 'GET',\r\n    headers: getAuthHeaders(),\r\n  });\r\n\r\n  if (!response.ok) {\r\n    throw new Error('Failed to fetch P9 report');\r\n  }\r\n\r\n  return response.json();\r\n};\r\n\r\n// Generate P9 for specific year\r\nexport const generateP9 = async (year) => {\r\n  const response = await fetch(`${BASE_URL}/reports/p9/`, {\r\n    method: 'POST',\r\n    headers: getAuthHeaders(),\r\n    body: JSON.stringify({\r\n      tax_year: year\r\n    }),\r\n  });\r\n\r\n  if (!response.ok) {\r\n    const errorData = await response.json();\r\n    throw new Error(errorData.error || 'Failed to generate P9 report');\r\n  }\r\n\r\n  return response.json();\r\n};\r\n\r\n// Download P9 as PDF\r\nexport const downloadP9PDF = async (p9Id) => {\r\n  const token = localStorage.getItem('token');\r\n  const response = await fetch(`${BASE_URL}/reports/p9/${p9Id}/download_pdf/`, {\r\n    method: 'GET',\r\n    headers: {\r\n      'Authorization': token ? `Token ${token}` : '',\r\n    },\r\n  });\r\n\r\n  if (!response.ok) {\r\n    throw new Error('Failed to download P9 PDF');\r\n  }\r\n\r\n  // Handle binary response\r\n  const blob = await response.blob();\r\n  const url = window.URL.createObjectURL(blob);\r\n  const link = document.createElement('a');\r\n  link.href = url;\r\n  link.download = `P9_Report_${p9Id}.pdf`;\r\n  document.body.appendChild(link);\r\n  link.click();\r\n  document.body.removeChild(link);\r\n  window.URL.revokeObjectURL(url);\r\n};\r\n\r\n// Get payslip summary for P9 generation\r\nexport const getPayslipSummary = async (year) => {\r\n  const response = await fetch(`${BASE_URL}/reports/p9/payslip_summary/?year=${year}`, {\r\n    method: 'GET',\r\n    headers: getAuthHeaders(),\r\n  });\r\n\r\n  if (!response.ok) {\r\n    throw new Error('Failed to fetch payslip summary');\r\n  }\r\n\r\n  return response.json();\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}